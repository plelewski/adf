{
	"name": "Products1",
	"properties": {
		"description": "all in both files",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AllProducts",
						"type": "DatasetReference"
					},
					"name": "all"
				},
				{
					"dataset": {
						"referenceName": "ProductsPlace",
						"type": "DatasetReference"
					},
					"name": "place"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "destTable"
				}
			],
			"transformations": [
				{
					"name": "allColumns"
				},
				{
					"name": "removeDuplicateColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          NAME as string,",
				"          PRICE as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> all",
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          SHOP as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> place",
				"all, place join(all@PRODUCT_ID == place@PRODUCT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> allColumns",
				"allColumns select(mapColumn(",
				"          PRODUCT_ID = all@PRODUCT_ID,",
				"          NAME,",
				"          PRICE,",
				"          SHOP",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> removeDuplicateColumns",
				"removeDuplicateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          name as string,",
				"          price as integer,",
				"          shop as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> destTable"
			]
		}
	}
}